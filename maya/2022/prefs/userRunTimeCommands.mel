//Maya Preference 2022 (Release 1)
//
//

runTimeCommand
	-label ""
	-annotation "ResetTrahsform"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-command ("import maya.api.OpenMaya as om\nfrom apiundo import apiundo\n\nclass MDagModifier(om.MDagModifier):\n    def __init__(self, *args, **kwargs):\n        super(MDagModifier, self).__init__(*args, **kwargs)\n        apiundo.commit(self.undoIt, self.doIt)\n\ndef iterate_selected_mob_objects():\n    selection = om.MGlobal.getActiveSelectionList()\n\n    for sel_num in range(selection.length()):\n        yield selection.getDependNode(sel_num)\n\ndef reset_to_default():\n    mod = MDagModifier()\n    dag_fn = om.MFnDagNode()\n\n    def interesting_plug(plug):\n        if not plug.isKeyable and not plug.isChannelBox:\n            return False\n        if plug.isLocked:\n            return False\n        if plug.isDefaultValue():\n            return False\n        return True\n\n    for node in iterate_selected_mob_objects():\n        if not node.hasFn(om.MFn.kDagNode):\n            return\n\n        dag_fn.setObject(node)\n        for num_attr in range(dag_fn.attributeCount()):\n            attribute = dag_fn.attribute(num_attr)\n            plug = om.MPlug(node, attribute)\n\n            if not interesting_plug(plug):\n                continue\n\n            plug_type = attribute.apiType()  # plug_type_str = attribute.apiTypeStr\n\n            if plug_type == om.MFn.kNumericAttribute:\n                num_fn = om.MFnNumericAttribute(attribute)\n                default = num_fn.default\n                mod.newPlugValueFloat(plug, default)\n\n            elif plug_type == om.MFn.kEnumAttribute:\n                num_fn = om.MFnEnumAttribute(attribute)\n                default = num_fn.default\n                mod.newPlugValueInt(plug, default)\n\n            elif plug_type == om.MFn.kDoubleAngleAttribute:\n                num_fn = om.MFnUnitAttribute(attribute)\n                default = num_fn.default\n                mod.newPlugValueMAngle(plug, default)\n\n            elif plug_type == om.MFn.kDoubleLinearAttribute:\n                num_fn = om.MFnUnitAttribute(attribute)\n                default = num_fn.default\n                mod.newPlugValueMDistance(plug, default)\n\n    mod.doIt()\n\nreset_to_default()")
	ResetTrahsform;

runTimeCommand
	-label ""
	-annotation "Create Joint"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-command ("import rig_tools.creator as creator\n\ncreator.Joint()")
	CreateJoint;

runTimeCommand
	-label ""
	-annotation "Create Static"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-command ("import rig_tools.creator as creator\n\ncreator.Static()")
	CreateStatic;

runTimeCommand
	-label ""
	-annotation "Create Control"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-command ("import rig_tools.creator as creator\n\ncreator.Control()")
	CreateControl;

runTimeCommand
	-label ""
	-annotation "SelectHi"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "mel"
	-command ("select -hi")
	SelectHi;

runTimeCommand
	-label ""
	-annotation "ToggleWireframeMode"
	-longAnnotation ""
	-category "Custom Scripts"
	-image ""
	-tags ""
	-keywords ""
	-plugin ""
	-helpUrl ""
	-hotkeyCtx ""
	-commandLanguage "python"
	-command ("from maya import cmds\n\npanel = cmds.getPanel(withFocus=True)\nmode = cmds.modelEditor(panel, q=True, da=True)\n\nif mode == 'wireframe':\n    cmds.modelEditor(panel, e=True, da='smoothShaded')\nelse:\n    cmds.modelEditor(panel, e=True, da='wireframe')\n")
	ToggleWireframeMode;

